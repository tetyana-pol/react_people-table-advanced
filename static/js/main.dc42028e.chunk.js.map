{"version":3,"sources":["utils/searchHelper.ts","components/SearchLink.tsx","components/PeopleFilters.tsx","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","api.ts","components/PeoplePage.tsx","components/Navbar.tsx","components/HomePage.tsx","components/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","useSearchParams","searchParams","to","search","PeopleFilters","setSearchParams","sex","get","centuries","getAll","query","className","cn","type","placeholder","onChange","e","newParam","target","handleSearch","map","century","includes","filter","c","Loader","PersonLink","person","name","slug","PeopleTable","people","slugSelected","sort","order","sortParams","param","personList","born","died","mother","motherName","father","fatherName","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","isLoading","setIsLoading","error","setError","useParams","useEffect","getPeople","find","item","preparedPeople","catch","finally","length","filterSex","trim","toLocaleLowerCase","prepared","elem","toLowerCase","Math","ceil","a","b","localeCompare","reverse","Navbar","isActiveClass","isActive","role","HomePage","NotFoundPage","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.dc42028e.chunk.js","sourcesContent":["export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { ChangeEvent } from 'react';\nimport { SearchLink } from './SearchLink';\nimport { getSearchWith } from '../utils/searchHelper';\n\nexport const PeopleFilters = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const centuriesList = ['16', '17', '18', '19', '20'];\n\n  const sex = searchParams.get('sex');\n  const centuries = searchParams.getAll('centuries');\n  const query = searchParams.get('query') || '';\n\n  function handleSearch(e: ChangeEvent<HTMLInputElement>): void {\n    const newParam = (e.target.value === '')\n      ? getSearchWith(searchParams, { query: null })\n      : getSearchWith(searchParams, { query: e.target.value });\n\n    setSearchParams(newParam);\n  }\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <SearchLink\n          params={{ sex: null }}\n          className={cn({ 'is-active': !sex })}\n        >\n          All\n        </SearchLink>\n\n        <SearchLink\n          params={{ sex: 'm' }}\n          className={cn({ 'is-active': sex === 'm' })}\n        >\n          Male\n        </SearchLink>\n\n        <SearchLink\n          params={{ sex: 'f' }}\n          className={cn({ 'is-active': sex === 'f' })}\n        >\n          Female\n        </SearchLink>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query}\n            onChange={e => handleSearch(e)}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {centuriesList.map(century => (\n              <SearchLink\n                key={century}\n                params={{\n                  centuries: centuries.includes(century)\n                    ? centuries.filter(c => c !== century)\n                    : [...centuries, century],\n                }}\n                className={cn('button mr-1', {\n                  'is-info': centuries.includes(century),\n                })}\n              >\n                {century}\n              </SearchLink>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              data-cy=\"centuryALL\"\n              className=\"button is-success is-outlined\"\n              params={{ centuries: null }}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          className=\"button is-link is-outlined is-fullwidth\"\n          params={{\n            sex: null,\n            query: null,\n            centuries: null,\n          }}\n        >\n          Reset all filters\n        </SearchLink>\n\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../types/Person';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { name, sex, slug } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={cn({ 'has-text-danger': sex === 'f' })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../types/Person';\nimport { PersonLink } from './PersonLink';\nimport { SearchLink } from './SearchLink';\nimport { SearchParams } from '../utils/searchHelper';\n\ntype Props = {\n  people: Person[];\n  slugSelected?: string;\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people, slugSelected }) => {\n  const [searchParams] = useSearchParams();\n\n  const sort = searchParams.get('sort');\n  const order = searchParams.get('order');\n\n  const sortParams = (param: string) => {\n    if (sort !== param) {\n      return {\n        sort: param,\n        order: null,\n      };\n    }\n\n    if (sort === param && order !== 'desc') {\n      return { order: 'desc' };\n    }\n\n    return {\n      sort: null,\n      order: null,\n    };\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Name\n              <SearchLink\n                params={sortParams('name') as SearchParams}\n              >\n                <span className=\"icon\">\n                  <i className={cn('fas fa-sort', {\n                    'fa-sort-up': sort === 'name' && !order,\n                    'fa-sort-down': sort === 'name' && order,\n                  })}\n                  />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Sex\n              <SearchLink\n                params={sortParams('sex') as SearchParams}\n              >\n                <span className=\"icon\">\n                  <i className={cn('fas fa-sort', {\n                    'fa-sort-up': sort === 'sex' && !order,\n                    'fa-sort-down': sort === 'sex' && order,\n                  })}\n                  />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Born\n              <SearchLink\n                params={sortParams('born') as SearchParams}\n              >\n                <span className=\"icon\">\n                  <i className={cn('fas fa-sort', {\n                    'fa-sort-up': sort === 'born' && !order,\n                    'fa-sort-down': sort === 'born' && order,\n                  })}\n                  />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Died\n              <SearchLink\n                params={sortParams('died') as SearchParams}\n              >\n                <span className=\"icon\">\n                  <i className={cn('fas fa-sort', {\n                    'fa-sort-up': sort === 'died' && !order,\n                    'fa-sort-down': sort === 'died' && order,\n                  })}\n                  />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(personList => {\n          return (\n            <tr\n              data-cy=\"person\"\n              key={personList.slug}\n              className={cn({\n                'has-background-warning': personList.slug === slugSelected,\n              })}\n            >\n              <td>\n                <PersonLink person={personList} />\n              </td>\n\n              <td>{personList.sex}</td>\n              <td>{personList.born}</td>\n              <td>{personList.died}</td>\n              <td>\n                {personList.mother\n                  ? (<PersonLink person={personList.mother} />)\n                  : personList.motherName || '-'}\n              </td>\n              <td>\n                {personList.father\n                  ? (<PersonLink person={personList.father} />)\n                  : personList.fatherName || '-'}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport { PeopleFilters } from './PeopleFilters';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [searchParams] = useSearchParams();\n\n  const { slug } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then(response => {\n        const peopleServer: Person[] = response.map(person => {\n          const mother = response\n            .find(item => item.name === person.motherName);\n          const father = response\n            .find(item => item.name === person.fatherName);\n\n          return ({\n            ...person,\n            mother,\n            father,\n          });\n        });\n\n        return peopleServer;\n      })\n      .then(preparedPeople => setPeople(preparedPeople))\n      .catch(() => setError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const preparedPeople = () => {\n    const sort = searchParams.get('sort');\n    const order = searchParams.get('order');\n    const filterSex = searchParams.get('sex');\n    const query = searchParams.get('query')?.trim().toLocaleLowerCase();\n    const centuries = searchParams.getAll('centuries');\n    let prepared = [...people];\n\n    if (query) {\n      prepared = prepared.filter(elem => elem.name.toLowerCase()\n        .includes(query)\n        || elem.motherName?.toLowerCase().includes(query)\n        || elem.fatherName?.toLowerCase().includes(query));\n    }\n\n    if (filterSex) {\n      prepared = prepared.filter(elem => elem.sex === filterSex);\n    }\n\n    if (centuries && centuries.length > 0) {\n      prepared = prepared.filter(elem => (\n        centuries?.includes(Math.ceil(elem.born / 100).toString())));\n    }\n\n    if (sort) {\n      switch (sort) {\n        case 'name':\n        {\n          prepared.sort((a, b) => a.name.localeCompare(b.name));\n          break;\n        }\n\n        case 'sex':\n        {\n          prepared.sort((a, b) => a.sex.localeCompare(b.sex));\n          break;\n        }\n\n        case 'born': {\n          prepared.sort((a, b) => a.born - b.born);\n          break;\n        }\n\n        case 'died': {\n          prepared.sort((a, b) => a.died - b.died);\n          break;\n        }\n\n        default:\n      }\n    }\n\n    if (order) {\n      prepared.reverse();\n    }\n\n    return prepared;\n  };\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            {!isLoading && <PeopleFilters />}\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading && (\n                <Loader />\n              )}\n              {error && (\n                <p data-cy=\"peopleLoadingError\">Something went wrong</p>\n              )}\n              {people.length === 0 && !error && !isLoading && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n              <p>There are no people matching the current search criteria</p>\n              {people.length > 0 && (\n                <PeopleTable people={preparedPeople()} slugSelected={slug} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nexport const Navbar = () => {\n  const isActiveClass = ({ isActive }: { isActive: boolean }) => cn(\n    'navbar-item', {\n      'has-background-grey-lighter': isActive,\n    },\n  );\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={isActiveClass}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={isActiveClass}\n            aria-current=\"page\"\n          >\n            People\n          </NavLink>\n\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { PeoplePage } from './components/PeoplePage';\nimport { Navbar } from './components/Navbar';\n\nimport './App.scss';\nimport { HomePage } from './components/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n            <Route path=\"*\" element={<NotFoundPage />} />\n          </Routes>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}